{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sindh\\\\Downloads\\\\cruddemo\\\\cruddemo\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport DataDisplay from './DataDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dataFromServer, setDataFromServer] = useState(null);\n  const [newDataInput, setNewDataInput] = useState('');\n  const handleButtonClick = async button => {\n    try {\n      switch (button) {\n        // ... (existing cases remain unchanged)\n\n        case 'button2':\n          // Insert data\n          await fetch('http://localhost:8080/api/employees', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              newData: newDataInput\n            })\n          });\n          break;\n\n        // ... (other cases remain unchanged)\n\n        default:\n          break;\n      }\n    } catch (error) {\n      console.error(`Error handling ${button} click:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Four Buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('button1'),\n        children: \"Button 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('button2'),\n        children: \"Button 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('button3'),\n        children: \"Button 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('button4'),\n        children: \"Button 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), dataFromServer && /*#__PURE__*/_jsxDEV(DataDisplay, {\n      data: dataFromServer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postDataForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleButtonClick('button2');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"New Data:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newDataInput,\n            onChange: e => setNewDataInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nTlvaBvYgdT13hcmKtRmrifCKhI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","DataDisplay","jsxDEV","_jsxDEV","App","_s","dataFromServer","setDataFromServer","newDataInput","setNewDataInput","handleButtonClick","button","fetch","method","headers","body","JSON","stringify","newData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","onSubmit","e","preventDefault","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sindh/Downloads/cruddemo/cruddemo/my-react-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport DataDisplay from './DataDisplay';\n\nfunction App() {\n    const [dataFromServer, setDataFromServer] = useState(null);\n    const [newDataInput, setNewDataInput] = useState('');\n\n    const handleButtonClick = async (button) => {\n        try {\n            switch (button) {\n                // ... (existing cases remain unchanged)\n\n                case 'button2':\n                    // Insert data\n                    await fetch('http://localhost:8080/api/employees', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({ newData: newDataInput }),\n                    });\n                    break;\n\n                // ... (other cases remain unchanged)\n\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(`Error handling ${button} click:`, error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>React Four Buttons</h1>\n            <div>\n                <button onClick={() => handleButtonClick('button1')}>Button 1</button>\n                <button onClick={() => handleButtonClick('button2')}>Button 2</button>\n                <button onClick={() => handleButtonClick('button3')}>Button 3</button>\n                <button onClick={() => handleButtonClick('button4')}>Button 4</button>\n            </div>\n\n            {dataFromServer && <DataDisplay data={dataFromServer} />}\n\n            {/* Add a form for posting data */}\n            <div className=\"postDataForm\">\n                <h2>Post Data</h2>\n                <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        handleButtonClick('button2');\n                    }}\n                >\n                    <label>\n                        New Data:\n                        <input\n                            type=\"text\"\n                            value={newDataInput}\n                            onChange={(e) => setNewDataInput(e.target.value)}\n                        />\n                    </label>\n                    <button type=\"submit\">Post Data</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}