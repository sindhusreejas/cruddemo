{"ast":null,"code":"// ... (other imports and styling remain unchanged)\nimport{useState}from\"react\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[dataFromServer,setDataFromServer]=useState(null);const[newDataInput,setNewDataInput]=useState(\"\");const[newDataInputPut,setNewDataInputPut]=useState(\"\");const[newDataInputDelete,setNewDataInputDelete]=useState(\"\");// Separate state variables for each form\nconst[showPostForm,setShowPostForm]=useState(false);const[showPutForm,setShowPutForm]=useState(false);const[showDeleteForm,setShowDeleteForm]=useState(false);const handleButtonClick=async button=>{try{switch(button){case'button1':// Fetch data only when Button 1 is clicked\nconst response=await fetch('http://localhost:8080/api/employees');const data=await response.json();setDataFromServer(data);setShowPostForm(false);setShowPutForm(false);setShowDeleteForm(false);// Hide the input form\nbreak;case'button2':// Show input text box when Button 2 is clicked\nsetShowPostForm(true);setShowPutForm(false);setShowDeleteForm(false);setDataFromServer(null);// Clear previous data\nbreak;case'button3':// Implement logic for Button 3 if needed\nsetShowPostForm(false);setShowPutForm(true);setShowDeleteForm(false);setDataFromServer(null);// Clear previous data\nbreak;case'button4':setShowPostForm(false);setShowPutForm(false);setShowDeleteForm(true);setDataFromServer(null);// Implement logic for Button 4 if needed\nbreak;default:break;}}catch(error){console.error(\"Error handling \".concat(button,\" click:\"),error);}};const handleFormSubmit=async e=>{e.preventDefault();try{const formattedData=JSON.parse(newDataInput);console.log('newDataInput:',formattedData);// Check the value here\n// Insert data when the form is submitted\nawait axios.post('http://localhost:8080/api/employees',{method:'POST',headers:{'Content-Type':'application/json'},body:formattedData});// Optionally, you can clear the input after posting\n//setNewDataInput('');\nsetShowPostForm(false);// Hide the input form after posting\n}catch(error){console.error('Error posting data:',error);}};const handlePutFormSubmit=async e=>{e.preventDefault();try{const formattedPutData=JSON.parse(newDataInput);// Assuming 'updatedData' is the correct property name\nconsole.log('newDataPutInput:',formattedPutData);await axios.put('http://localhost:8080/api/employees',formattedPutData,{headers:{'Content-Type':'application/json'},body:formattedPutData});// Rest of the code...\n}catch(error){console.error('Error Updating data:',error);}};const handleDeleteFormSubmit=async e=>{e.preventDefault();try{const formattedPutData={newData:newDataInputDelete};console.log('newDataDelInput:',newDataInputDelete);// Check the value here\nconst URL='http://localhost:8080/api/employees/'.concat(JSON.stringify(newDataInputDelete));// Insert data when the form is submitted\nawait axios.delete(URL,{headers:{'Content-Type':'application/json'},body:parseInt(JSON.stringify(newDataInputDelete),10)});// Optionally, you can clear the input after posting\n//setNewDataInputDelete();\nsetShowDeleteForm(false);// Hide the input form after posting\n}catch(error){console.error('Error Deleting data:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React CRUD Application\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('button1'),children:\"Button 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('button2'),children:\"Button 2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('button3'),children:\"Button 3\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('button4'),children:\"Button 4\"})]}),dataFromServer&&/*#__PURE__*/_jsxs(\"div\",{className:\"DataDisplay\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data from Server\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(dataFromServer,null,2)})]}),showPostForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"postDataForm\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Post Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Data:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newDataInput,onChange:e=>setNewDataInput(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post Data\"})]})]}),showPutForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"DataFormPut\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Put Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handlePutFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Update Data:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newDataInputPut,onChange:e=>setNewDataInputPut(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Put Data\"})]})]}),showDeleteForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"DataFormDel\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Delete Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleDeleteFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Delete Data:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newDataInputDelete,onChange:e=>setNewDataInputDelete(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Delete Data\"})]})]})]});}export default App;","map":{"version":3,"names":["useState","axios","jsx","_jsx","jsxs","_jsxs","App","dataFromServer","setDataFromServer","newDataInput","setNewDataInput","newDataInputPut","setNewDataInputPut","newDataInputDelete","setNewDataInputDelete","showPostForm","setShowPostForm","showPutForm","setShowPutForm","showDeleteForm","setShowDeleteForm","handleButtonClick","button","response","fetch","data","json","error","console","concat","handleFormSubmit","e","preventDefault","formattedData","JSON","parse","log","post","method","headers","body","handlePutFormSubmit","formattedPutData","put","handleDeleteFormSubmit","newData","URL","stringify","delete","parseInt","className","children","onClick","onSubmit","type","value","onChange","target"],"sources":["C:/Users/sindh/Downloads/cruddemo/cruddemo/my-react-app/src/App.js"],"sourcesContent":["// ... (other imports and styling remain unchanged)\n\nimport {useState} from \"react\";\nimport axios from 'axios';\n\nfunction App() {\n    const [dataFromServer, setDataFromServer] = useState(null);\n    const [newDataInput, setNewDataInput] = useState(\"\");\n    const [newDataInputPut, setNewDataInputPut] = useState(\"\");\n    const [newDataInputDelete, setNewDataInputDelete] = useState(\"\");\n\n    // Separate state variables for each form\n    const [showPostForm, setShowPostForm] = useState(false);\n    const [showPutForm, setShowPutForm] = useState(false);\n    const [showDeleteForm, setShowDeleteForm] = useState(false);\n\n    const handleButtonClick = async (button) => {\n        try {\n            switch (button) {\n                case 'button1':\n                    // Fetch data only when Button 1 is clicked\n                    const response = await fetch('http://localhost:8080/api/employees');\n                    const data = await response.json();\n                    setDataFromServer(data);\n                    setShowPostForm(false);\n                    setShowPutForm(false);\n                    setShowDeleteForm(false); // Hide the input form\n                    break;\n\n                case 'button2':\n                    // Show input text box when Button 2 is clicked\n                    setShowPostForm(true);\n                    setShowPutForm(false);\n                    setShowDeleteForm(false);\n                    setDataFromServer(null); // Clear previous data\n                    break;\n\n                case 'button3':\n                    // Implement logic for Button 3 if needed\n                    setShowPostForm(false);\n                    setShowPutForm(true);\n                    setShowDeleteForm(false);\n                    setDataFromServer(null); // Clear previous data\n                    break;\n\n                case 'button4':\n                    setShowPostForm(false);\n                    setShowPutForm(false);\n                    setShowDeleteForm(true);\n                    setDataFromServer(null);// Implement logic for Button 4 if needed\n                    break;\n\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(`Error handling ${button} click:`, error);\n        }\n    };\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const formattedData = JSON.parse(newDataInput);\n\n            console.log('newDataInput:', formattedData); // Check the value here\n\n            // Insert data when the form is submitted\n            await axios.post('http://localhost:8080/api/employees', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: formattedData,\n            });\n\n            // Optionally, you can clear the input after posting\n            //setNewDataInput('');\n            setShowPostForm(false); // Hide the input form after posting\n        } catch (error) {\n            console.error('Error posting data:', error);\n        }\n    };\n\n    const handlePutFormSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const formattedPutData = JSON.parse(newDataInput); // Assuming 'updatedData' is the correct property name\n            console.log('newDataPutInput:', formattedPutData);\n\n            await axios.put('http://localhost:8080/api/employees', formattedPutData, {\n\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: formattedPutData,\n            });\n\n            // Rest of the code...\n        } catch (error) {\n            console.error('Error Updating data:', error);\n        }\n    };\n    const handleDeleteFormSubmit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const formattedPutData = { newData: newDataInputDelete };\n            console.log('newDataDelInput:', newDataInputDelete); // Check the value here\n            const URL = 'http://localhost:8080/api/employees/'.concat(JSON.stringify(newDataInputDelete))\n\n            // Insert data when the form is submitted\n            await axios.delete(URL, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: parseInt(JSON.stringify(newDataInputDelete), 10),\n            });\n\n            // Optionally, you can clear the input after posting\n            //setNewDataInputDelete();\n            setShowDeleteForm(false); // Hide the input form after posting\n        } catch (error) {\n            console.error('Error Deleting data:', error);\n        }\n    };\n\n\n    return (\n        <div className=\"App\">\n            <h1>React CRUD Application</h1>\n            <div>\n                <button onClick={() => handleButtonClick('button1')}>Button 1</button>\n                <button onClick={() => handleButtonClick('button2')}>Button 2</button>\n                <button onClick={() => handleButtonClick('button3')}>Button 3</button>\n                <button onClick={() => handleButtonClick('button4')}>Button 4</button>\n            </div>\n\n            {dataFromServer && (\n                <div className=\"DataDisplay\">\n                    <h2>Data from Server</h2>\n                    <pre>{JSON.stringify(dataFromServer, null, 2)}</pre>\n                </div>\n            )}\n\n            {showPostForm && (\n                <div className=\"postDataForm\">\n                    <h2>Post Data</h2>\n                    <form onSubmit={handleFormSubmit}>\n                        <label>\n                            New Data:\n                            <input\n                                type=\"text\"\n                                value={newDataInput}\n                                onChange={(e) => setNewDataInput(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Post Data</button>\n                    </form>\n                </div>\n            )}\n            {showPutForm && (\n                <div className=\"DataFormPut\">\n                    <h2>Put Data</h2>\n                    <form onSubmit={handlePutFormSubmit}>\n                        <label>\n                            Update Data:\n                            <input\n                                type=\"text\"\n                                value={newDataInputPut}\n                                onChange={(e) => setNewDataInputPut(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Put Data</button>\n                    </form>\n                </div>\n            )}\n            {showDeleteForm && (\n                <div className=\"DataFormDel\">\n                    <h2>Delete Data</h2>\n                    <form onSubmit={handleDeleteFormSubmit}>\n                        <label>\n                            Delete Data:\n                            <input\n                                type=\"text\"\n                                value={newDataInputDelete}\n                                onChange={(e) => setNewDataInputDelete(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Delete Data</button>\n                    </form>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA;AAEA,OAAQA,QAAQ,KAAO,OAAO,CAC9B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACS,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACW,eAAe,CAAEC,kBAAkB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACa,kBAAkB,CAAEC,qBAAqB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEhE;AACA,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACiB,WAAW,CAAEC,cAAc,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACmB,cAAc,CAAEC,iBAAiB,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAE3D,KAAM,CAAAqB,iBAAiB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACxC,GAAI,CACA,OAAQA,MAAM,EACV,IAAK,SAAS,CACV;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAC,CACnE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClClB,iBAAiB,CAACiB,IAAI,CAAC,CACvBT,eAAe,CAAC,KAAK,CAAC,CACtBE,cAAc,CAAC,KAAK,CAAC,CACrBE,iBAAiB,CAAC,KAAK,CAAC,CAAE;AAC1B,MAEJ,IAAK,SAAS,CACV;AACAJ,eAAe,CAAC,IAAI,CAAC,CACrBE,cAAc,CAAC,KAAK,CAAC,CACrBE,iBAAiB,CAAC,KAAK,CAAC,CACxBZ,iBAAiB,CAAC,IAAI,CAAC,CAAE;AACzB,MAEJ,IAAK,SAAS,CACV;AACAQ,eAAe,CAAC,KAAK,CAAC,CACtBE,cAAc,CAAC,IAAI,CAAC,CACpBE,iBAAiB,CAAC,KAAK,CAAC,CACxBZ,iBAAiB,CAAC,IAAI,CAAC,CAAE;AACzB,MAEJ,IAAK,SAAS,CACVQ,eAAe,CAAC,KAAK,CAAC,CACtBE,cAAc,CAAC,KAAK,CAAC,CACrBE,iBAAiB,CAAC,IAAI,CAAC,CACvBZ,iBAAiB,CAAC,IAAI,CAAC,CAAC;AACxB,MAEJ,QACI,MACR,CACJ,CAAE,MAAOmB,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,mBAAAE,MAAA,CAAmBP,MAAM,YAAWK,KAAK,CAAC,CAC3D,CACJ,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAG,KAAO,CAAAC,CAAC,EAAK,CAClCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAEA,KAAM,CAAAC,aAAa,CAAGC,IAAI,CAACC,KAAK,CAAC1B,YAAY,CAAC,CAE9CmB,OAAO,CAACQ,GAAG,CAAC,eAAe,CAAEH,aAAa,CAAC,CAAE;AAE7C;AACA,KAAM,CAAAhC,KAAK,CAACoC,IAAI,CAAC,qCAAqC,CAAE,CACpDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEP,aACV,CAAC,CAAC,CAEF;AACA;AACAjB,eAAe,CAAC,KAAK,CAAC,CAAE;AAC5B,CAAE,MAAOW,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC/C,CACJ,CAAC,CAED,KAAM,CAAAc,mBAAmB,CAAG,KAAO,CAAAV,CAAC,EAAK,CACrCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAU,gBAAgB,CAAGR,IAAI,CAACC,KAAK,CAAC1B,YAAY,CAAC,CAAE;AACnDmB,OAAO,CAACQ,GAAG,CAAC,kBAAkB,CAAEM,gBAAgB,CAAC,CAEjD,KAAM,CAAAzC,KAAK,CAAC0C,GAAG,CAAC,qCAAqC,CAAED,gBAAgB,CAAE,CAErEH,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEE,gBACV,CAAC,CAAC,CAEF;AACJ,CAAE,MAAOf,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CACD,KAAM,CAAAiB,sBAAsB,CAAG,KAAO,CAAAb,CAAC,EAAK,CACxCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAEA,KAAM,CAAAU,gBAAgB,CAAG,CAAEG,OAAO,CAAEhC,kBAAmB,CAAC,CACxDe,OAAO,CAACQ,GAAG,CAAC,kBAAkB,CAAEvB,kBAAkB,CAAC,CAAE;AACrD,KAAM,CAAAiC,GAAG,CAAG,sCAAsC,CAACjB,MAAM,CAACK,IAAI,CAACa,SAAS,CAAClC,kBAAkB,CAAC,CAAC,CAE7F;AACA,KAAM,CAAAZ,KAAK,CAAC+C,MAAM,CAACF,GAAG,CAAE,CACpBP,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAES,QAAQ,CAACf,IAAI,CAACa,SAAS,CAAClC,kBAAkB,CAAC,CAAE,EAAE,CACzD,CAAC,CAAC,CAEF;AACA;AACAO,iBAAiB,CAAC,KAAK,CAAC,CAAE;AAC9B,CAAE,MAAOO,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAChD,CACJ,CAAC,CAGD,mBACItB,KAAA,QAAK6C,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChBhD,IAAA,OAAAgD,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/B9C,KAAA,QAAA8C,QAAA,eACIhD,IAAA,WAAQiD,OAAO,CAAEA,CAAA,GAAM/B,iBAAiB,CAAC,SAAS,CAAE,CAAA8B,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACtEhD,IAAA,WAAQiD,OAAO,CAAEA,CAAA,GAAM/B,iBAAiB,CAAC,SAAS,CAAE,CAAA8B,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACtEhD,IAAA,WAAQiD,OAAO,CAAEA,CAAA,GAAM/B,iBAAiB,CAAC,SAAS,CAAE,CAAA8B,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACtEhD,IAAA,WAAQiD,OAAO,CAAEA,CAAA,GAAM/B,iBAAiB,CAAC,SAAS,CAAE,CAAA8B,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACrE,CAAC,CAEL5C,cAAc,eACXF,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBhD,IAAA,OAAAgD,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBhD,IAAA,QAAAgD,QAAA,CAAMjB,IAAI,CAACa,SAAS,CAACxC,cAAc,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CAAC,EACnD,CACR,CAEAQ,YAAY,eACTV,KAAA,QAAK6C,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBhD,IAAA,OAAAgD,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB9C,KAAA,SAAMgD,QAAQ,CAAEvB,gBAAiB,CAAAqB,QAAA,eAC7B9C,KAAA,UAAA8C,QAAA,EAAO,WAEH,cAAAhD,IAAA,UACImD,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE9C,YAAa,CACpB+C,QAAQ,CAAGzB,CAAC,EAAKrB,eAAe,CAACqB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CACpD,CAAC,EACC,CAAC,cACRpD,IAAA,WAAQmD,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,EACN,CACR,CACAlC,WAAW,eACRZ,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBhD,IAAA,OAAAgD,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjB9C,KAAA,SAAMgD,QAAQ,CAAEZ,mBAAoB,CAAAU,QAAA,eAChC9C,KAAA,UAAA8C,QAAA,EAAO,cAEH,cAAAhD,IAAA,UACImD,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE5C,eAAgB,CACvB6C,QAAQ,CAAGzB,CAAC,EAAKnB,kBAAkB,CAACmB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CACvD,CAAC,EACC,CAAC,cACRpD,IAAA,WAAQmD,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACrC,CAAC,EACN,CACR,CACAhC,cAAc,eACXd,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBhD,IAAA,OAAAgD,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9C,KAAA,SAAMgD,QAAQ,CAAET,sBAAuB,CAAAO,QAAA,eACnC9C,KAAA,UAAA8C,QAAA,EAAO,cAEH,cAAAhD,IAAA,UACImD,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE1C,kBAAmB,CAC1B2C,QAAQ,CAAGzB,CAAC,EAAKjB,qBAAqB,CAACiB,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE,CAC1D,CAAC,EACC,CAAC,cACRpD,IAAA,WAAQmD,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,aAAW,CAAQ,CAAC,EACxC,CAAC,EACN,CACR,EACA,CAAC,CAEd,CAEA,cAAe,CAAA7C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}