{"ast":null,"code":"// ... (other imports and styling remain unchanged)\nimport{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[dataFromServer,setDataFromServer]=useState(null);const[newDataInput,setNewDataInput]=useState('');const handleButtonClick=async button=>{try{switch(button){case'button1':// Fetch data only when Button 1 is clicked\nconst response=await fetch('http://localhost:8080/api/employees');const data=await response.json();setDataFromServer(data);break;case'button2':// Insert data only when Button 2 is clicked\nawait fetch('http://localhost:8080/api/employees',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({newData:newDataInput})});// Optionally, you can clear the input after posting\nsetNewDataInput('');break;// ... (other cases remain unchanged)\ndefault:break;}}catch(error){console.error(\"Error handling \".concat(button,\" click:\"),error);}};const handleFormSubmit=e=>{e.preventDefault();// Prevent the default form submission behavior\nhandleButtonClick('button2').then(r=>\"Posting Data\");};// ... (rest of the code remains unchanged)\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"postDataForm\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Post Data\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"New Data:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newDataInput,onChange:e=>setNewDataInput(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post Data\"})]})]})});}export default App;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","App","dataFromServer","setDataFromServer","newDataInput","setNewDataInput","handleButtonClick","button","response","fetch","data","json","method","headers","body","JSON","stringify","newData","error","console","concat","handleFormSubmit","e","preventDefault","then","r","className","children","onSubmit","type","value","onChange","target"],"sources":["C:/Users/sindh/Downloads/cruddemo/cruddemo/my-react-app/src/App.js"],"sourcesContent":["// ... (other imports and styling remain unchanged)\n\nimport {useState} from \"react\";\n\nfunction App() {\n    const [dataFromServer, setDataFromServer] = useState(null);\n    const [newDataInput, setNewDataInput] = useState('');\n\n    const handleButtonClick = async (button) => {\n        try {\n            switch (button) {\n                case 'button1':\n                    // Fetch data only when Button 1 is clicked\n                    const response = await fetch('http://localhost:8080/api/employees');\n                    const data = await response.json();\n                    setDataFromServer(data);\n                    break;\n\n                case 'button2':\n                    // Insert data only when Button 2 is clicked\n                    await fetch('http://localhost:8080/api/employees', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({ newData: newDataInput }),\n                    });\n                    // Optionally, you can clear the input after posting\n                    setNewDataInput('');\n                    break;\n\n                // ... (other cases remain unchanged)\n\n                default:\n                    break;\n            }\n        } catch (error) {\n            console.error(`Error handling ${button} click:`, error);\n        }\n    };\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault(); // Prevent the default form submission behavior\n        handleButtonClick('button2').then(r => \"Posting Data\");\n    };\n\n    // ... (rest of the code remains unchanged)\n\n    return (\n        <div className=\"App\">\n            {/* ... (previous code) */}\n\n            {/* Add a form for posting data */}\n            <div className=\"postDataForm\">\n                <h2>Post Data</h2>\n                <form onSubmit={handleFormSubmit}>\n                    <label>\n                        New Data:\n                        <input\n                            type=\"text\"\n                            value={newDataInput}\n                            onChange={(e) => setNewDataInput(e.target.value)}\n                        />\n                    </label>\n                    <button type=\"submit\">Post Data</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"AAAA;AAEA,OAAQA,QAAQ,KAAO,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACQ,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAAU,iBAAiB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACxC,GAAI,CACA,OAAQA,MAAM,EACV,IAAK,SAAS,CACV;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAC,CACnE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClCR,iBAAiB,CAACO,IAAI,CAAC,CACvB,MAEJ,IAAK,SAAS,CACV;AACA,KAAM,CAAAD,KAAK,CAAC,qCAAqC,CAAE,CAC/CG,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEb,YAAa,CAAC,CAClD,CAAC,CAAC,CACF;AACAC,eAAe,CAAC,EAAE,CAAC,CACnB,MAEJ;AAEA,QACI,MACR,CACJ,CAAE,MAAOa,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,mBAAAE,MAAA,CAAmBb,MAAM,YAAWW,KAAK,CAAC,CAC3D,CACJ,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAIC,CAAC,EAAK,CAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AACpBjB,iBAAiB,CAAC,SAAS,CAAC,CAACkB,IAAI,CAACC,CAAC,EAAI,cAAc,CAAC,CAC1D,CAAC,CAED;AAEA,mBACI3B,IAAA,QAAK4B,SAAS,CAAC,KAAK,CAAAC,QAAA,cAIhB3B,KAAA,QAAK0B,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzB7B,IAAA,OAAA6B,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB3B,KAAA,SAAM4B,QAAQ,CAAEP,gBAAiB,CAAAM,QAAA,eAC7B3B,KAAA,UAAA2B,QAAA,EAAO,WAEH,cAAA7B,IAAA,UACI+B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE1B,YAAa,CACpB2B,QAAQ,CAAGT,CAAC,EAAKjB,eAAe,CAACiB,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE,CACpD,CAAC,EACC,CAAC,cACRhC,IAAA,WAAQ+B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,EACN,CAAC,CACL,CAAC,CAEd,CAEA,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}